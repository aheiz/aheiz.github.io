{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","AppModule","declarations","providers","bootstrap","HomeComponent","oWebViewInterface","window","nsWebViewInterface","LoginComponent","zone","title","addNativeMsgListener","emit","on","token","redirectUrl","run","location","href","event","logout","follow","styleUrls","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nexport const routes: Routes = [\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'home', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n    constructor() {}\r\n}\r\n","<router-outlet class=\"app-content\" #o=\"outlet\"><router-outlet> </router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, LoginComponent, HomeComponent],\r\n    imports: [BrowserModule, AppRoutingModule, NoopAnimationsModule, MatButtonModule],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent {\r\n    constructor() {}\r\n}\r\n","<!--The content below is only a placeholder and can be replaced.-->\r\n<div style=\"text-align:center\">\r\n    <h1>\r\n        Exxas Home\r\n    </h1>\r\n\r\n    <h2>This is used to test the native back button behavior</h2>\r\n    <a mat-raised-button color=\"primary\" routerLink=\"/login\">Go back</a>\r\n</div>\r\n","import { Component, AfterViewInit, OnInit, NgZone } from '@angular/core';\r\n\r\nconst oWebViewInterface = (window as any).nsWebViewInterface;\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.less']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n    title = 'ngwebtest';\r\n\r\n    token: string;\r\n\r\n    constructor(public zone: NgZone) {}\r\n\r\n    ngOnInit() {\r\n        this.addNativeMsgListener();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        oWebViewInterface.emit('request-token');\r\n    }\r\n\r\n    addNativeMsgListener() {\r\n        oWebViewInterface.on('login', ({ token: token, redirectUrl: redirectUrl }) => {\r\n            this.zone.run(() => {\r\n                this.token = token;\r\n            });\r\n\r\n            // ToDo: Exxas angular team: store token and open direct path if given\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        //oWebViewInterface.emit('logout', { redirectUrl: 'test' });\r\n\r\n        window.location.href = \"XXXXXXX:/Logout/?returnUrl=\" + 'test';\r\n    \r\n    }\r\n\r\n    follow(event: Event) {\r\n        // const hrefTarget = event.currentTarget ? (event.currentTarget as any).href : '';\r\n\r\n        // console.log('follow: ' + hrefTarget);\r\n\r\n        // // Runs within native app?\r\n        // if (this.token && hrefTarget.length) {\r\n        //     // redirect event to native app:\r\n        //     oWebViewInterface.emit('follow', { target: hrefTarget });\r\n\r\n        //     // stopp event propagation:\r\n        //     event.preventDefault();\r\n        //     event.stopPropagation();\r\n        //     return false;\r\n        // }\r\n    }\r\n}\r\n","<!--The content below is only a placeholder and can be replaced.-->\r\n<div style=\"text-align: center;\">\r\n    <h1>\r\n        Angular Exxas App Test\r\n    </h1>\r\n\r\n    <h2>Token from exxax app: {{ token }}</h2>\r\n    <div>\r\n        <button mat-raised-button color=\"primary\" class=\"test-button\" (click)=\"logout()\">\r\n            Logout\r\n        </button>\r\n    </div>\r\n    <div>\r\n        <button mat-raised-button class=\"test-button\" [routerLink]=\"['/home']\">\r\n            Open sub page\r\n        </button>\r\n    </div>\r\n    <div>\r\n        <a\r\n            mat-raised-button\r\n            class=\"test-button\"\r\n            href=\"https://www.exxo.ch/\"\r\n            (click)=\"follow($event)\"\r\n            >external link: exxo.ch</a\r\n        >\r\n    </div>\r\n    <div>\r\n        <a\r\n            mat-raised-button\r\n            class=\"test-button\"\r\n            download\r\n            href=\"assets/file.txt\"\r\n            (click)=\"follow($event)\"\r\n            >download text file(.txt)</a\r\n        >\r\n    </div>\r\n    <div>\r\n        <a\r\n            mat-raised-button\r\n            class=\"test-button\"\r\n            download\r\n            href=\"assets/file.xlsx\"\r\n            (click)=\"follow($event)\"\r\n            >open xlsx file</a\r\n        >\r\n    </div>\r\n    <div>\r\n        <a\r\n            mat-raised-button\r\n            class=\"test-button\"\r\n            href=\"mailto:ah@interap.de\"\r\n            (click)=\"follow($event)\"\r\n            >mailto link to ah@interap.de</a\r\n        >\r\n    </div>\r\n    <div>\r\n        <a mat-raised-button class=\"test-button\" href=\"tel:+49-761-1525812\" (click)=\"follow($event)\"\r\n            >call link</a\r\n        >\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}